// <auto-generated />
using System;
using CreditMate.Persistence.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CreditMate.Persistence.Migrations
{
    [DbContext(typeof(CreditMateContext))]
    [Migration("20231211224847_ParcelaFoiPagoMigration")]
    partial class ParcelaFoiPagoMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CreditMate.Core.Entities.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("Id");

                    b.ToTable("Cliente");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1f2565e-d7e6-4170-9b35-7d1228ea55f1"),
                            Celular = "(11)951136376",
                            Cpf = "38586555894",
                            CreatedAt = new DateTime(2023, 12, 11, 19, 48, 47, 528, DateTimeKind.Local).AddTicks(835),
                            IsActive = true,
                            Nome = "Casey Adesola Fernandes",
                            Uf = "SP",
                            UpdatedAt = new DateTime(2023, 12, 11, 19, 48, 47, 528, DateTimeKind.Local).AddTicks(850)
                        },
                        new
                        {
                            Id = new Guid("a26635ef-b924-4a97-873e-26c2801d323a"),
                            Celular = "(27)989000360",
                            Cpf = "53119013064",
                            CreatedAt = new DateTime(2023, 12, 11, 19, 48, 47, 528, DateTimeKind.Local).AddTicks(909),
                            IsActive = true,
                            Nome = "Lucas Amorim",
                            Uf = "SP",
                            UpdatedAt = new DateTime(2023, 12, 11, 19, 48, 47, 528, DateTimeKind.Local).AddTicks(910)
                        },
                        new
                        {
                            Id = new Guid("f35c557b-6f1a-494d-9425-69fc3f4ed9a7"),
                            Celular = "(45)996176307",
                            Cpf = "53546002512",
                            CreatedAt = new DateTime(2023, 12, 11, 19, 48, 47, 528, DateTimeKind.Local).AddTicks(928),
                            IsActive = true,
                            Nome = "Douglas Eduardo",
                            Uf = "SP",
                            UpdatedAt = new DateTime(2023, 12, 11, 19, 48, 47, 528, DateTimeKind.Local).AddTicks(929)
                        });
                });

            modelBuilder.Entity("CreditMate.Core.Entities.Financiamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("TipoFinanciamento")
                        .HasColumnType("int");

                    b.Property<DateTime>("UltimoVencimento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Financiamento");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f35c557b-6f1a-494d-9425-69fc3f4ed9a7"),
                            Cpf = "38586555894",
                            CreatedAt = new DateTime(2023, 12, 11, 19, 48, 47, 528, DateTimeKind.Local).AddTicks(959),
                            IsActive = true,
                            TipoFinanciamento = 0,
                            UltimoVencimento = new DateTime(2024, 6, 11, 19, 48, 47, 528, DateTimeKind.Local).AddTicks(948),
                            UpdatedAt = new DateTime(2023, 12, 11, 19, 48, 47, 528, DateTimeKind.Local).AddTicks(960),
                            ValorTotal = 50000m
                        },
                        new
                        {
                            Id = new Guid("abc3a4f6-ea22-4523-9915-f13a5f5e6253"),
                            Cpf = "53119013064",
                            CreatedAt = new DateTime(2023, 12, 11, 19, 48, 47, 528, DateTimeKind.Local).AddTicks(983),
                            IsActive = true,
                            TipoFinanciamento = 1,
                            UltimoVencimento = new DateTime(2025, 12, 11, 19, 48, 47, 528, DateTimeKind.Local).AddTicks(978),
                            UpdatedAt = new DateTime(2023, 12, 11, 19, 48, 47, 528, DateTimeKind.Local).AddTicks(983),
                            ValorTotal = 800000m
                        },
                        new
                        {
                            Id = new Guid("aa77cc25-111c-4011-9d27-bd630a32753f"),
                            Cpf = "53546002512",
                            CreatedAt = new DateTime(2023, 12, 11, 19, 48, 47, 528, DateTimeKind.Local).AddTicks(999),
                            IsActive = true,
                            TipoFinanciamento = 3,
                            UltimoVencimento = new DateTime(2024, 12, 11, 19, 48, 47, 528, DateTimeKind.Local).AddTicks(998),
                            UpdatedAt = new DateTime(2023, 12, 11, 19, 48, 47, 528, DateTimeKind.Local).AddTicks(999),
                            ValorTotal = 200000m
                        });
                });

            modelBuilder.Entity("CreditMate.Core.Entities.Parcela", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataVencimento")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FinanciamentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("FoiPago")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("NumeroParcela")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FinanciamentoId");

                    b.ToTable("Parcela");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cbfc78b8-8651-4c3a-b1f3-495d35372526"),
                            CreatedAt = new DateTime(2023, 12, 11, 19, 48, 47, 528, DateTimeKind.Local).AddTicks(1031),
                            DataPagamento = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataVencimento = new DateTime(2023, 12, 31, 19, 48, 47, 528, DateTimeKind.Local).AddTicks(1017),
                            FinanciamentoId = new Guid("f35c557b-6f1a-494d-9425-69fc3f4ed9a7"),
                            FoiPago = false,
                            IsActive = true,
                            NumeroParcela = 1,
                            UpdatedAt = new DateTime(2023, 12, 11, 19, 48, 47, 528, DateTimeKind.Local).AddTicks(1031),
                            Valor = 8333m
                        },
                        new
                        {
                            Id = new Guid("f96444c8-e822-43eb-ae1d-6531c2374ae2"),
                            CreatedAt = new DateTime(2023, 12, 11, 19, 48, 47, 528, DateTimeKind.Local).AddTicks(1050),
                            DataPagamento = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataVencimento = new DateTime(2023, 12, 31, 19, 48, 47, 528, DateTimeKind.Local).AddTicks(1048),
                            FinanciamentoId = new Guid("abc3a4f6-ea22-4523-9915-f13a5f5e6253"),
                            FoiPago = false,
                            IsActive = true,
                            NumeroParcela = 1,
                            UpdatedAt = new DateTime(2023, 12, 11, 19, 48, 47, 528, DateTimeKind.Local).AddTicks(1050),
                            Valor = 3333m
                        },
                        new
                        {
                            Id = new Guid("7eb2d084-8fad-4078-856b-8f60658d860e"),
                            CreatedAt = new DateTime(2023, 12, 11, 19, 48, 47, 528, DateTimeKind.Local).AddTicks(1068),
                            DataPagamento = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataVencimento = new DateTime(2023, 12, 31, 19, 48, 47, 528, DateTimeKind.Local).AddTicks(1067),
                            FinanciamentoId = new Guid("aa77cc25-111c-4011-9d27-bd630a32753f"),
                            FoiPago = false,
                            IsActive = true,
                            NumeroParcela = 1,
                            UpdatedAt = new DateTime(2023, 12, 11, 19, 48, 47, 528, DateTimeKind.Local).AddTicks(1069),
                            Valor = 1666m
                        });
                });

            modelBuilder.Entity("CreditMate.Core.Entities.Financiamento", b =>
                {
                    b.HasOne("CreditMate.Core.Entities.Cliente", null)
                        .WithMany("Financiamentos")
                        .HasForeignKey("ClienteId");
                });

            modelBuilder.Entity("CreditMate.Core.Entities.Parcela", b =>
                {
                    b.HasOne("CreditMate.Core.Entities.Financiamento", null)
                        .WithMany("Parcelas")
                        .HasForeignKey("FinanciamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CreditMate.Core.Entities.Cliente", b =>
                {
                    b.Navigation("Financiamentos");
                });

            modelBuilder.Entity("CreditMate.Core.Entities.Financiamento", b =>
                {
                    b.Navigation("Parcelas");
                });
#pragma warning restore 612, 618
        }
    }
}
